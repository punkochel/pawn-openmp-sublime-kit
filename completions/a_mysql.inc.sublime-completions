{
    "scope": "source.pawn - variable.other.pawn",
    "completions": 
    [
    	{"trigger": "MySQL", "contents": "MySQL:", "annotation": "a_mysql.inc"},
    	{"trigger": "Cache", "contents": "Cache:", "annotation": "a_mysql.inc"},
    	{"trigger": "ORM", "contents": "ORM:", "annotation": "a_mysql.inc"},
    	{"trigger": "MySQLOpt", "contents": "MySQLOpt:", "annotation": "a_mysql.inc"},

    	{"trigger": "ER_DBACCESS_DENIED_ERROR", "annotation": "a_mysql.inc"},
		{"trigger": "ER_ACCESS_DENIED_ERROR", "annotation": "a_mysql.inc"},
		{"trigger": "ER_UNKNOWN_TABLE", "annotation": "a_mysql.inc"},
		{"trigger": "ER_SYNTAX_ERROR", "annotation": "a_mysql.inc"},
		{"trigger": "CR_SERVER_GONE_ERROR", "annotation": "a_mysql.inc"},
		{"trigger": "CR_SERVER_LOST", "annotation": "a_mysql.inc"},
		{"trigger": "CR_COMMAND_OUT_OF_SYNC", "annotation": "a_mysql.inc"},
		{"trigger": "CR_SERVER_LOST_EXTENDED", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_LOGLEVEL", "contents": "E_LOGLEVEL:", "annotation": "a_mysql.inc"},
		{"trigger": "NONE", "annotation": "a_mysql.inc"},
		{"trigger": "DEBUG", "annotation": "a_mysql.inc"},
		{"trigger": "INFO", "annotation": "a_mysql.inc"},
		{"trigger": "WARNING", "annotation": "a_mysql.inc"},
		{"trigger": "ERROR", "annotation": "a_mysql.inc"},
		{"trigger": "ALL", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_ORM_ERROR", "contents": "E_ORM_ERROR:", "annotation": "a_mysql.inc"},
		{"trigger": "ERROR_INVALID", "annotation": "a_mysql.inc"},
		{"trigger": "ERROR_OK", "annotation": "a_mysql.inc"},
		{"trigger": "ERROR_NO_DATA", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_MYSQL_GLOBAL_OPTION", "contents": "E_MYSQL_GLOBAL_OPTION:", "annotation": "a_mysql.inc"},
		{"trigger": "DUPLICATE_CONNECTIONS", "annotation": "a_mysql.inc"},
		{"trigger": "DUPLICATE_CONNECTION_WARNING", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_MYSQL_OPTION", "contents": "E_MYSQL_OPTION:", "annotation": "a_mysql.inc"},
		{"trigger": "AUTO_RECONNECT", "annotation": "a_mysql.inc"},
		{"trigger": "MULTI_STATEMENTS", "annotation": "a_mysql.inc"},
		{"trigger": "POOL_SIZE", "annotation": "a_mysql.inc"},
		{"trigger": "SERVER_PORT", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_ENABLE", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_KEY_FILE", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_CERT_FILE", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_CA_FILE", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_CA_PATH", "annotation": "a_mysql.inc"},
		{"trigger": "SSL_CIPHER", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_MYSQL_FIELD_TYPE", "contents": "E_MYSQL_FIELD_TYPE:", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_INVALID", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_DECIMAL", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TINY", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_SHORT", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_LONG", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_FLOAT", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_DOUBLE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_NULL", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TIMESTAMP", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_LONGLONG", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_INT24", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_DATE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TIME", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_DATETIME", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_YEAR", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_NEWDATE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_VARCHAR", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_BIT", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TIMESTAMP2", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_DATETIME2", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TIME2", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_JSON", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_NEWDECIMAL", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_ENUM", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_SET", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_TINY_BLOB", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_MEDIUM_BLOB", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_LONG_BLOB", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_BLOB", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_VAR_STRING", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_STRING", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_TYPE_GEOMETRY", "annotation": "a_mysql.inc"},
		
		{"trigger": "E_MYSQL_EXECTIME_UNIT", "contents": "E_MYSQL_EXECTIME_UNIT:", "annotation": "a_mysql.inc"},
		{"trigger": "MILLISECONDS", "annotation": "a_mysql.inc"},
		{"trigger": "MICROSECONDS", "annotation": "a_mysql.inc"},

		{"trigger": "MYSQL_DEFAULT_HANDLE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_INVALID_HANDLE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_INVALID_CACHE", "annotation": "a_mysql.inc"},
		{"trigger": "MYSQL_INVALID_ORM", "annotation": "a_mysql.inc"},

		/*
			ORM functions
		*/
		{"trigger": "orm_create", "contents": "orm_create(${1:const table[]}, ${2:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_destroy", "contents": "orm_destroy(${1:ORM:id})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_errno", "contents": "orm_errno(${1:ORM:id})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_apply_cache", "contents": "orm_apply_cache(${1:ORM:id}, ${2:row_idx}, ${3:result_idx = 0})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_select", "contents": "orm_select(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_update", "contents": "orm_update(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_insert", "contents": "orm_insert(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_delete", "contents": "orm_delete(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_load", "contents": "orm_load(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_save", "contents": "orm_save(${1:ORM:id}, ${2:const callback[] = \"\"}, ${3:const format[] = \"\"}, ${4:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_addvar_int", "contents": "orm_addvar_int(${1:ORM:id}, ${2:&var}, ${3:const columnname[]})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_addvar_float", "contents": "orm_addvar_float(${1:ORM:id}, ${2:&Float:var}, ${3:const columnname[]})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_addvar_string", "contents": "orm_addvar_string(${1:ORM:id}, ${2:var[]}, ${3:var_maxlen}, ${4:const columnname[]})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_clear_vars", "contents": "orm_clear_vars(${1:ORM:id})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_delvar", "contents": "orm_delvar(${1:ORM:id}, ${2:const columnname[]})", "annotation": "a_mysql.inc"},
		{"trigger": "orm_setkey", "contents": "orm_setkey(${1:ORM:id}, ${2:const columnname[]})", "annotation": "a_mysql.inc"},
		
		/*
			MySQL functions
		*/
		{"trigger": "mysql_log", "contents": "mysql_log(${1:E_LOGLEVEL:loglevel = ERROR | WARNING})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_connect", "contents": "mysql_connect(${1:const host[]}, ${2:const user[]}, ${3:const password[]}, ${4:const database[]}, ${5:MySQLOpt:option_id = MySQLOpt:0})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_connect_file", "contents": "mysql_connect_file(${1:const file_name[] = \"mysql.ini\"})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_close", "contents": "mysql_close(${1:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_unprocessed_queries", "contents": "mysql_unprocessed_queries(${1:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_global_options", "contents": "mysql_global_options(${1:E_MYSQL_GLOBAL_OPTION:type}, ${2:value})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_init_options", "contents": "mysql_init_options()", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_set_option", "contents": "mysql_set_option(${1:MySQLOpt:option_id}, ${2:E_MYSQL_OPTION:type}, ${3:...})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_pquery", "contents": "mysql_pquery(${1:MySQL:handle}, ${2:const query[]}, ${3:const callback[] = \"\"}, ${4:const format[] = \"\"}, ${5:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_tquery", "contents": "mysql_tquery(${1:MySQL:handle}, ${2:const query[]}, ${3:const callback[] = \"\"}, ${4:const format[] = \"\"}, ${5:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_query", "contents": "mysql_query(${1:MySQL:handle}, ${2:const query[]}, ${3:bool:use_cache = true})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_tquery_file", "contents": "mysql_tquery_file(${1:MySQL:handle}, ${2:const file_path[]}, ${3:const callback[] = \"\"}, ${4:const format[] = \"\"}, ${5:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_query_file", "contents": "mysql_query_file(${1:MySQL:handle}, ${2:const file_path[]}, ${3:bool:use_cache = false})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_errno", "contents": "mysql_errno(${1:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_error", "contents": "mysql_error(${1:destination[]}, ${2:max_len = sizeof(destination)}, ${3:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_escape_string", "contents": "mysql_escape_string(${1:const source[]}, ${2:destination[]}, ${3:max_len = sizeof(destination)}, ${4:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_format", "contents": "mysql_format(${1:MySQL:handle}, ${2:output[]}, ${3:max_len}, ${4:const format[]}, ${5:{Float, _}:...})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_set_charset", "contents": "mysql_set_charset(${1:const charset[]}, ${2:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_get_charset", "contents": "mysql_get_charset(${1:destination[]}, ${2:max_len = sizeof(destination)}, ${3:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		{"trigger": "mysql_stat", "contents": "mysql_stat(${1:destination[]}, ${2:max_len = sizeof(destination)}, ${3:MySQL:handle = MYSQL_DEFAULT_HANDLE})", "annotation": "a_mysql.inc"},
		
		/*
			Cache functions
		*/
		{"trigger": "cache_get_row_count", "contents": "cache_get_row_count(${1:&destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_field_count", "contents": "cache_get_field_count(${1:&destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_result_count", "contents": "cache_get_result_count(${1:&destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_field_name", "contents": "cache_get_field_name(${1:field_index}, ${2:destination[]}, ${3:max_len = sizeof(destination)})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_field_type", "contents": "cache_get_field_type(${1:field_index})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_set_result", "contents": "cache_set_result(${1:result_index})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_num_rows", "contents": "cache_num_rows()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_num_fields", "contents": "cache_num_fields()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_num_results", "contents": "cache_num_results()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_index", "contents": "cache_get_value_index(${1:row_idx}, ${2:column_idx}, ${3:destination[]}, ${4:max_len = sizeof(destination)})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_index_int", "contents": "cache_get_value_index_int(${1:row_idx}, ${2:column_idx}, ${3:&destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_index_float", "contents": "cache_get_value_index_float(${1:row_idx}, ${2:column_idx}, ${3:&Float:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_index_bool", "contents": "cache_get_value_index_bool(${1:row_idx}, ${2:column_idx}, ${3:&bool:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_is_value_index_null", "contents": "cache_is_value_index_null(${1:row_idx}, ${2:column_idx}, ${3:&bool:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_name", "contents": "cache_get_value_name(${1:row_idx}, ${2:const column_name[]}, ${3:destination[]}, ${4:max_len = sizeof(destination)})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_name_int", "contents": "cache_get_value_name_int(${1:row_idx}, ${2:const column_name[]}, ${3:&destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_name_float", "contents": "cache_get_value_name_float(${1:row_idx}, ${2:const column_name[]}, ${3:&Float:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_value_name_bool", "contents": "cache_get_value_name_bool(${1:row_idx}, ${2:const column_name[]}, ${3:&bool:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_is_value_name_null", "contents": "cache_is_value_name_null(${1:row_idx}, ${2:const column_name[]}, ${3:&bool:destination})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_save", "contents": "cache_save()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_delete", "contents": "cache_delete(${1:Cache:cache_id})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_set_active", "contents": "cache_set_active(${1:Cache:cache_id})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_unset_active", "contents": "cache_unset_active()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_is_any_active", "contents": "cache_is_any_active()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_is_valid", "contents": "cache_is_valid(${1:Cache:cache_id})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_affected_rows", "contents": "cache_affected_rows()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_insert_id", "contents": "cache_insert_id()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_warning_count", "contents": "cache_warning_count()", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_query_exec_time", "contents": "cache_get_query_exec_time(${1:E_MYSQL_EXECTIME_UNIT:unit = MICROSECONDS})", "annotation": "a_mysql.inc"},
		{"trigger": "cache_get_query_string", "contents": "cache_get_query_string(${1:destination[]}, ${2:max_len = sizeof(destination)})", "annotation": "a_mysql.inc"},
		{"trigger": "OnQueryError", "contents": "OnQueryError(${1:errorid}, ${2:const error[]}, ${3:const callback[]}, ${4:const query[]}, ${5:MySQL:handle})", "annotation": "a_mysql.inc"},
	]
}
