{
    "scope": "source.pawn - variable.other.pawn",

    "completions": 
    [
    	{"trigger": "heapspace", "contents": "heapspace()", "annotation": "core.inc"},
		{"trigger": "funcidx", "contents": "funcidx(${1:const name[]})", "annotation": "core.inc"},
		{"trigger": "numargs", "contents": "numargs()", "annotation": "core.inc"},
		{"trigger": "getarg", "contents": "getarg(${1:arg}, ${2:index = 0})", "annotation": "core.inc"},
		{"trigger": "setarg", "contents": "setarg(${1:arg}, ${2:index = 0}, ${3:value})", "annotation": "core.inc"},
		{"trigger": "tolower", "contents": "tolower(${1:c})", "annotation": "core.inc"},
		{"trigger": "toupper", "contents": "toupper(${1:c})", "annotation": "core.inc"},
		{"trigger": "swapchars", "contents": "swapchars(${1:c})", "annotation": "core.inc"},
		{"trigger": "random", "contents": "random(${1:max})", "annotation": "core.inc"},
		{"trigger": "min", "contents": "min(${1:value1}, ${2:value2})", "annotation": "core.inc"},
		{"trigger": "max", "contents": "max(${1:value1}, ${2:value2})", "annotation": "core.inc"},
		{"trigger": "clamp", "contents": "clamp(${1:value}, ${2:min = cellmin}, ${3:max = cellmax})", "annotation": "core.inc"},
		{"trigger": "getproperty", "contents": "getproperty(${1:id = 0}, ${2:const name[] = \"\"}, ${3:value = cellmin}, ${4:string[] = \"\"})", "annotation": "core.inc"},
		{"trigger": "setproperty", "contents": "setproperty(${1:id = 0}, ${2:const name[] = \"\"}, ${3:value = cellmin}, ${4:const string[] = \"\"})", "annotation": "core.inc"},
		{"trigger": "deleteproperty", "contents": "deleteproperty(${1:id = 0}, ${2:const name[] = \"\"}, ${3:value = cellmin})", "annotation": "core.inc"},
		{"trigger": "existproperty", "contents": "existproperty(${1:id = 0}, ${2:const name[] = \"\"}, ${3:value = cellmin})", "annotation": "core.inc"}
		{"trigger": "getpubvar", "contents": "getpubvar(${1:const __name[]})", "annotation": "core.inc"},
		{"trigger": "setpubvar", "contents": "setpubvar(${1:const __name[]}, ${2:__value})", "annotation": "core.inc"},
		{"trigger": "existpubvar", "contents": "existpubvar(${1:const __name[]})", "annotation": "core.inc"},
		{"trigger": "numpubvars", "contents": "numpubvars()", "annotation": "core.inc"},
	]
}