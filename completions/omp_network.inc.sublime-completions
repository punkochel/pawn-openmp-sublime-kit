{
    "scope": "source.pawn - variable.other.pawn",

    "completions": 
    [
    	{"trigger": "CONNECTION_STATUS", "contents": "CONNECTION_STATUS:", "annotation": "omp_network.inc"},
		{"trigger": "UNKNOWN_CONNECTION_STATUS", "annotation": "omp_network.inc"},
    	{"trigger": "CONNECTION_STATUS_NO_ACTION", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_DISCONNECT_ASAP", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_DISCONNECT_ASAP_SILENTLY", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_DISCONNECT_ON_NO_ACK", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_REQUESTED_CONNECTION", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_HANDLING_CONNECTION_REQUEST", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_UNVERIFIED_SENDER", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_SET_ENCRYPTION_ON_MULTIPLE_16_BYTE_PACKET", "annotation": "omp_network.inc"},
		{"trigger": "CONNECTION_STATUS_CONNECTED", "annotation": "omp_network.inc"},

		{"trigger": "DOWNLOAD_REQUEST", "contents": "DOWNLOAD_REQUEST:", "annotation": "omp_network.inc"},
		{"trigger": "UNKNOWN_DOWNLOAD_REQUEST", "annotation": "omp_network.inc"},
		{"trigger": "DOWNLOAD_REQUEST_EMPTY", "annotation": "omp_network.inc"},
		{"trigger": "DOWNLOAD_REQUEST_MODEL_FILE", "annotation": "omp_network.inc"},
		{"trigger": "DOWNLOAD_REQUEST_TEXTURE_FILE", "annotation": "omp_network.inc"},

		/*
			Natives
		*/
		{"trigger": "Kick", "contents": "Kick(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "Ban", "contents": "Ban(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "BanEx", "contents": "BanEx(${1:playerid}, ${2:const reason[]})", "annotation": "omp_network.inc"},
		{"trigger": "BlockIpAddress", "contents": "BlockIpAddress(${1:const ipAddress[]}, ${2:timeMS})", "annotation": "omp_network.inc"},
		{"trigger": "UnBlockIpAddress", "contents": "UnBlockIpAddress(${1:const ipAddress[]})", "annotation": "omp_network.inc"},
		{"trigger": "ClearBanList", "contents": "ClearBanList()", "annotation": "omp_network.inc"},
		{"trigger": "IsBanned", "contents": "IsBanned(${1:const ipaddress[]})", "annotation": "omp_network.inc"},
		{"trigger": "IsPlayerAdmin", "contents": "IsPlayerAdmin(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "SetPlayerAdmin", "contents": "SetPlayerAdmin(${1:playerid}, ${2:bool:admin})", "annotation": "omp_network.inc"},
		{"trigger": "SendRconCommand", "contents": "SendRconCommand(${1:const format[]}, ${2:OPEN_MP_TAGS:...})", "annotation": "omp_network.inc"},
		{"trigger": "GetPlayerVersion", "contents": "GetPlayerVersion(${1:playerid}, ${2:version[]}, ${3:len = sizeof (version)})", "annotation": "omp_network.inc"},
		{"trigger": "gpci", "contents": "gpci(${1:playerid}, ${2:serial[]}, ${3:len = sizeof (serial)})", "annotation": "omp_network.inc"},
		{"trigger": "GetPlayerIp", "contents": "GetPlayerIp(${1:playerid}, ${2:ip[]}, ${3:len = sizeof (ip)})", "annotation": "omp_network.inc"},
		{"trigger": "GetPlayerRawIp", "contents": "GetPlayerRawIp(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "GetPlayerPing", "contents": "GetPlayerPing(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "SendClientCheck", "contents": "SendClientCheck(${1:playerid}, ${2:type}, ${3:memoryAddress}, ${4:memoryOffset}, ${5:byteCount})", "annotation": "omp_network.inc"},

		/*
			Netstats
		*/
		{"trigger": "NetStats_GetConnectedTime", "contents": "NetStats_GetConnectedTime(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_MessagesReceived", "contents": "NetStats_MessagesReceived(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_BytesReceived", "contents": "NetStats_BytesReceived(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_MessagesSent", "contents": "NetStats_MessagesSent(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_BytesSent", "contents": "NetStats_BytesSent(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_MessagesRecvPerSecond", "contents": "NetStats_MessagesRecvPerSecond(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_PacketLossPercent", "contents": "NetStats_PacketLossPercent(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_ConnectionStatus", "contents": "NetStats_ConnectionStatus(${1:playerid})", "annotation": "omp_network.inc"},
		{"trigger": "NetStats_GetIpPort", "contents": "NetStats_GetIpPort(${1:playerid}, ${2:output[]}, ${3:size = sizeof (output)})", "annotation": "omp_network.inc"},

		/*
			Formatted
		*/
		{"trigger": "GetNetworkStats", "contents": "GetNetworkStats(${1:output[]}, ${2:size = sizeof (output)})", "annotation": "omp_network.inc"},
		{"trigger": "GetPlayerNetworkStats", "contents": "GetPlayerNetworkStats(${1:playerid}, ${2:output[]}, ${3:size = sizeof (output)})", "annotation": "omp_network.inc"},
		
		/*
			Callbacks
		*/
		{"trigger": "OnClientCheckResponse", "contents": "OnClientCheckResponse(${1:playerid}, ${2:actionid}, ${3:memaddr}, ${4:retndata})", "annotation": "omp_network.inc"},
		{"trigger": "OnRconLoginAttempt", "contents": "OnRconLoginAttempt(${1:ip[]}, ${2:password[]}, ${3:success})", "annotation": "omp_network.inc"},
		{"trigger": "OnPlayerFinishedDownloading", "contents": "OnPlayerFinishedDownloading(${1:playerid}, ${2:virtualworld})", "annotation": "omp_network.inc"},
		{"trigger": "OnPlayerRequestDownload", "contents": "OnPlayerRequestDownload(${1:playerid}, ${2:DOWNLOAD_REQUEST:type}, ${3:crc})", "annotation": "omp_network.inc"},
		{"trigger": "OnRconCommand", "contents": "OnRconCommand(${1:cmd[]})", "annotation": "omp_network.inc"},
	]
}
